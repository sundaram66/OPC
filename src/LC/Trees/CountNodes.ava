/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int countNodes(TreeNode root) {
        
        if(root == null) return 0;
        
        int left = countNodes(root.left);
        int right = countNodes(root.right);
        
        return left + right + 1;
        
    }
}

// Count Complete Tree Nodes Will get TLE. Complete Tree property should be used. 
// a complete binary tree every level, except possibly the last, is completely filled
//All nodes in the last level are as far left as possible. 
//It can have between 1 and 2h nodes inclusive at the last level h.

